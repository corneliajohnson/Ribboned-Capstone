[{"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\index.js":"1","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\Ribboned.js":"2","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\ApplicationViews.js":"3","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\nav\\NavBar.js":"4","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\Home.js":"5","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\YouTube\\YouTubeSearch.js":"6","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\Ribbon\\RibbonDetail.js":"7","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\footer\\Footer.js":"8","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\login\\login.js":"9","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\providers\\UserProfileProvider.js":"10","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\register\\Register.js":"11","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\login\\Login.js":"12","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\providers\\CategoryProvider.js":"13","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\providers\\SourceProvider.js":"14","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\providers\\RibbonProvider.js":"15","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CategoryManager.js":"16","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonDetail.js":"17","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\youtube\\YouTubeSearch.js":"18","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CategoryList.js":"19","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CategoryDetail.js":"20","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CaregoryDelete.js":"21","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CategoryForm.js":"22","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\index.js":"23","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\Ribboned.js":"24","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\UserProfileProvider.js":"25","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\CategoryProvider.js":"26","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\RibbonProvider.js":"27","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\SourceProvider.js":"28","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ApplicationViews.js":"29","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\nav\\NavBar.js":"30","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\footer\\Footer.js":"31","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\Home.js":"32","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\register\\Register.js":"33","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryManager.js":"34","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\login\\Login.js":"35","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryForm.js":"36","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryList.js":"37","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryDetail.js":"38","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CaregoryDelete.js":"39","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonDetail.js":"40","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\youtube\\YouTubeSearch.js":"41","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\SnagProvider.js":"42","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonList.js":"43","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonCard.js":"44","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\snag\\SnagList.js":"45","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\snag\\SnagAddButton.js":"46","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonForm.js":"47","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonTrashList.js":"48","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonListByCategory.js":"49","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonTrashMove.js":"50","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryNavList.js":"51","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonDelete.js":"52","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonRestore.js":"53","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\firebase\\index.js":"54"},{"size":1030,"mtime":1611839234765,"results":"55","hashOfConfig":"56"},{"size":326,"mtime":1611839234698,"results":"57","hashOfConfig":"56"},{"size":1073,"mtime":1611841654549,"results":"58","hashOfConfig":"56"},{"size":2174,"mtime":1611839234740,"results":"59","hashOfConfig":"56"},{"size":697,"mtime":1611841654554,"results":"60","hashOfConfig":"56"},{"size":324,"mtime":1611839234702,"results":"61","hashOfConfig":"56"},{"size":3964,"mtime":1611839234694,"results":"62","hashOfConfig":"56"},{"size":499,"mtime":1611839234724,"results":"63","hashOfConfig":"56"},{"size":2348,"mtime":1611531722541,"results":"64","hashOfConfig":"56"},{"size":2883,"mtime":1611839234786,"results":"65","hashOfConfig":"56"},{"size":3309,"mtime":1611839234746,"results":"66","hashOfConfig":"56"},{"size":2348,"mtime":1611839234733,"results":"67","hashOfConfig":"56"},{"size":2111,"mtime":1611839234774,"results":"68","hashOfConfig":"56"},{"size":833,"mtime":1611839234784,"results":"69","hashOfConfig":"56"},{"size":2529,"mtime":1611839234777,"results":"70","hashOfConfig":"56"},{"size":880,"mtime":1611842774179,"results":"71","hashOfConfig":"56"},{"size":3964,"mtime":1611711946881,"results":"72","hashOfConfig":"56"},{"size":324,"mtime":1611711946883,"results":"73","hashOfConfig":"56"},{"size":815,"mtime":1611842774177,"results":"74","hashOfConfig":"56"},{"size":960,"mtime":1611842774172,"results":"75","hashOfConfig":"56"},{"size":1212,"mtime":1611842774167,"results":"76","hashOfConfig":"56"},{"size":1725,"mtime":1611842774175,"results":"77","hashOfConfig":"56"},{"size":1458,"mtime":1612189431662,"results":"78","hashOfConfig":"79"},{"size":326,"mtime":1611839234698,"results":"80","hashOfConfig":"79"},{"size":2883,"mtime":1611957869476,"results":"81","hashOfConfig":"79"},{"size":2111,"mtime":1611839234774,"results":"82","hashOfConfig":"79"},{"size":3575,"mtime":1612189431664,"results":"83","hashOfConfig":"79"},{"size":833,"mtime":1611954348656,"results":"84","hashOfConfig":"79"},{"size":2186,"mtime":1612189431649,"results":"85","hashOfConfig":"79"},{"size":2895,"mtime":1612189431660,"results":"86","hashOfConfig":"79"},{"size":499,"mtime":1611839234724,"results":"87","hashOfConfig":"79"},{"size":697,"mtime":1611841654554,"results":"88","hashOfConfig":"79"},{"size":3309,"mtime":1611839234746,"results":"89","hashOfConfig":"79"},{"size":880,"mtime":1611842774179,"results":"90","hashOfConfig":"79"},{"size":2348,"mtime":1611839234733,"results":"91","hashOfConfig":"79"},{"size":1680,"mtime":1612189431658,"results":"92","hashOfConfig":"79"},{"size":815,"mtime":1611842774177,"results":"93","hashOfConfig":"79"},{"size":960,"mtime":1611842774172,"results":"94","hashOfConfig":"79"},{"size":1341,"mtime":1612189431657,"results":"95","hashOfConfig":"79"},{"size":5653,"mtime":1612189431651,"results":"96","hashOfConfig":"79"},{"size":324,"mtime":1611839234702,"results":"97","hashOfConfig":"79"},{"size":1785,"mtime":1611943976398,"results":"98","hashOfConfig":"79"},{"size":724,"mtime":1612189431653,"results":"99","hashOfConfig":"79"},{"size":2189,"mtime":1612018795534,"results":"100","hashOfConfig":"79"},{"size":1347,"mtime":1611943976393,"results":"101","hashOfConfig":"79"},{"size":1047,"mtime":1611943976392,"results":"102","hashOfConfig":"79"},{"size":10484,"mtime":1612189431652,"results":"103","hashOfConfig":"79"},{"size":746,"mtime":1612189431655,"results":"104","hashOfConfig":"79"},{"size":848,"mtime":1612189431653,"results":"105","hashOfConfig":"79"},{"size":1502,"mtime":1612189431656,"results":"106","hashOfConfig":"79"},{"size":1609,"mtime":1612189431658,"results":"107","hashOfConfig":"79"},{"size":1172,"mtime":1612189431650,"results":"108","hashOfConfig":"79"},{"size":1567,"mtime":1612189431654,"results":"109","hashOfConfig":"79"},{"size":534,"mtime":1612189431661,"results":"110","hashOfConfig":"79"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"jkh9gn",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"113"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"113"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"113"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"113"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15orgwp",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"165"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"165"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"165"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"165"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"165"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"165"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"165"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"165"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"165"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"165"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"165"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"165"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"165"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"165"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"165"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"165"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"165"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\index.js",[],["241","242"],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\Ribboned.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\ApplicationViews.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\nav\\NavBar.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\Home.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\YouTube\\YouTubeSearch.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\Ribbon\\RibbonDetail.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\footer\\Footer.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\login\\login.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\register\\Register.js",["243"],"import React, { useContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport Logo from \"../../img/RibbonedFinger.png\";\r\nimport LogoWords from \"../../img/RibbonedWordOnly.png\";\r\nimport \"../login/Login.css\";\r\n\r\nexport const Register = () => {\r\n  const { register } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirm) {\r\n      // toast.error(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const profile = {\r\n      username,\r\n      email,\r\n    };\r\n    register(profile, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <div>\r\n        <img className=\"full-logo\" src={LogoWords} alt=\"main-logo\" />\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"bg-primary m-5\">\r\n        <div className=\"avatar bg-white\">\r\n          <img src={Logo} alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center text-white\">Register</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"username\"\r\n            placeholder=\"username\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"dark\" disabled={loading}>\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Already have an account?\r\n          <div>\r\n            <Link className=\"text-white\" to=\"/login\">\r\n              Log in here\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\login\\Login.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\providers\\CategoryProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\providers\\SourceProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\providers\\RibbonProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CategoryManager.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonDetail.js",[],["244","245"],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\youtube\\YouTubeSearch.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CategoryList.js",["246"],"import React, { useContext, useEffect } from \"react\";\r\nimport { CategoryContext } from \"../../providers/CategoryProvider\";\r\nimport { CategoryDetail } from \"./CategoryDetail\";\r\n\r\nexport const CategoryList = () => {\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n\r\n  //get all user categories\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  if (!categories) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"text-center\">All Categories</h3>\r\n      {categories.length === 0 ? (\r\n        <p className=\"text-center\">None</p>\r\n      ) : (\r\n        <div className=\"row justify-content-center\">\r\n          {categories.map((category) => (\r\n            <CategoryDetail key={category.id} category={category} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CategoryDetail.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CaregoryDelete.js",["247"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { CategoryContext } from \"../../providers/CategoryProvider\";\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\n\r\nexport const CategoryDelete = ({ category }) => {\r\n  const { deleteCategory, getCategories } = useContext(CategoryContext);\r\n  const [pendingDelete, setPendingDelete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, [pendingDelete]);\r\n\r\n  const handleDelete = () => {\r\n    deleteCategory(category.id);\r\n    setPendingDelete(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn btn-sm btn-danger\"\r\n        onClick={(e) => setPendingDelete(true)}\r\n      >\r\n        Delete\r\n      </Button>\r\n      <Modal isOpen={pendingDelete}>\r\n        <ModalHeader>Delete {category.name}?</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this category?</ModalBody>\r\n        <ModalFooter>\r\n          <Button onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n          <Button className=\"btn btn-outline-danger\" onClick={handleDelete}>\r\n            Yes, Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned\\Ribboned\\clientside\\src\\components\\category\\CategoryForm.js",["248","249","250"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { CategoryContext } from \"../../providers/CategoryProvider\";\r\nimport { Form, FormGroup, Input, Button, FormText, Card } from \"reactstrap\";\r\n\r\nexport const CategoryForm = () => {\r\n  const {\r\n    addCategory,\r\n    category,\r\n    setCategory,\r\n    updateCategory,\r\n    getCategories,\r\n  } = useContext(CategoryContext);\r\n  const userId = JSON.parse(localStorage.getItem(\"userProfile\")).id;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputControl = (event) => {\r\n    const newCategory = { ...category };\r\n    newCategory[event.target.name] = event.target.value;\r\n    setCategory(newCategory);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (category.id) {\r\n      category.userProfileId = userId;\r\n      updateCategory(category);\r\n    } else {\r\n      category.userProfileId = userId;\r\n      addCategory(category);\r\n    }\r\n    setCategory({ id: 0, name: \"\", userProfileId: userId });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <Card className=\"card mb-3 shadow-lg bg-white rounded\">\r\n        <h2 className=\"my-2 text-center\">Add A New Category</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup className=\"m-3\">\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={category.name}\r\n              onChange={handleInputControl}\r\n              required=\"required\"\r\n            />\r\n            <FormText>Duplicates will not be displayed.</FormText>\r\n          </FormGroup>\r\n          <Button className=\"btn-block\" color=\"dark\" disabled={loading}>\r\n            submit\r\n          </Button>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\index.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\Ribboned.js",[],["251","252"],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\CategoryProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\RibbonProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\SourceProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ApplicationViews.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\nav\\NavBar.js",["253"],"import React, { useContext, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\nimport Logo from \"../../img/RibbonedWordOnly.png\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport { List, NavLink } from \"reactstrap\";\r\n\r\nexport const NavBar = (props) => {\r\n  const { getCurrentUser, logout } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isActive, setActive] = useState(false);\r\n\r\n  const toggleClass = () => {\r\n    setActive(!isActive);\r\n  };\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <nav className={isActive ? \"openNav\" : null} onClick={toggleClass}>\r\n          <List className=\"navbar\">\r\n            <li className=\"navbar__item active fixed-top\">\r\n              <Link className=\"navbar__link\" to=\"/account m-5\">\r\n                Account\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar__item fixed-top\">\r\n              <Link className=\"navbar__link\" to=\"/account\">\r\n                <img className=\"logo\" alt=\"ribboned logo\" src={Logo} />\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar__item nav__addribbonlink\">\r\n              <Link className=\"navbar__link\" to=\"/ribbon/create\">\r\n                Add Ribbon\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar__item nav__addcategorylink\">\r\n              <Link className=\"navbar__link\" to=\"/categories\">\r\n                Categories\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar__item nav__ribbonlink\">\r\n              <Link className=\"navbar__link\" to=\"/ribbons\">\r\n                My Ribbons\r\n              </Link>\r\n            </li>\r\n            <li className=\"navbar__item fixed-bottom ml-2 mb-5\">\r\n              <NavLink className=\"navbar__link\" onClick={logoutAndReturn}>\r\n                Log Out\r\n              </NavLink>\r\n            </li>\r\n          </List>\r\n        </nav>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\footer\\Footer.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\Home.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\register\\Register.js",["254"],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryManager.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\login\\Login.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryForm.js",["255"],"import React, { useContext, useState } from \"react\";\r\nimport { CategoryContext } from \"../../providers/CategoryProvider\";\r\nimport { Form, FormGroup, Input, Button, FormText, Card } from \"reactstrap\";\r\n\r\nexport const CategoryForm = () => {\r\n  const { addCategory, category, setCategory, updateCategory } = useContext(\r\n    CategoryContext\r\n  );\r\n  const userId = JSON.parse(localStorage.getItem(\"userProfile\")).id;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleInputControl = (event) => {\r\n    const newCategory = { ...category };\r\n    newCategory[event.target.name] = event.target.value;\r\n    setCategory(newCategory);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (category.id) {\r\n      category.userProfileId = userId;\r\n      updateCategory(category);\r\n    } else {\r\n      category.userProfileId = userId;\r\n      addCategory(category);\r\n    }\r\n    setCategory({ id: 0, name: \"\", userProfileId: userId });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <Card className=\"card mb-3 shadow-lg bg-white rounded\">\r\n        <h2 className=\"my-2 text-center\">Add A New Category</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          <FormGroup className=\"m-3\">\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={category.name}\r\n              onChange={handleInputControl}\r\n              required=\"required\"\r\n            />\r\n            <FormText>Duplicates will not be displayed.</FormText>\r\n          </FormGroup>\r\n          <Button className=\"btn-block\" color=\"dark\" disabled={loading}>\r\n            submit\r\n          </Button>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryList.js",["256"],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryDetail.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CaregoryDelete.js",["257"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { CategoryContext } from \"../../providers/CategoryProvider\";\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\n\r\nexport const CategoryDelete = ({ category }) => {\r\n  const { deleteCategory, getCategories } = useContext(CategoryContext);\r\n  const [pendingDelete, setPendingDelete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, [pendingDelete]);\r\n\r\n  const handleDelete = () => {\r\n    deleteCategory(category.id);\r\n    setPendingDelete(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn btn-sm btn-danger\"\r\n        onClick={(e) => setPendingDelete(true)}\r\n      >\r\n        Delete\r\n      </Button>\r\n      <Modal isOpen={pendingDelete}>\r\n        <ModalHeader>Delete {category.name}?</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this category?</ModalBody>\r\n        <ModalBody className=\"text-warning\">\r\n          Ribbons with this category will be uncategorized.\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n          <Button className=\"btn btn-outline-danger\" onClick={handleDelete}>\r\n            Yes, Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonDetail.js",["258","259"],"import React, { useState, useRef, useContext, useEffect } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { RibbonContext } from \"../../providers/RibbonProvider\";\r\nimport { SnagList } from \"../snag/SnagList\";\r\nimport { SnagAddButton } from \"../snag/SnagAddButton\";\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Ribbon.css\";\r\n\r\nexport const RibbonDetail = () => {\r\n  const { getRibbonById } = useContext(RibbonContext);\r\n  const [ribbon, setRibbon] = useState({});\r\n  const [showDescription, setShowDecription] = useState(true);\r\n  const { ribbonId } = useParams();\r\n\r\n  //for management popover\r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n  useEffect(() => {\r\n    getRibbonById(ribbonId).then((response) => {\r\n      setRibbon(response);\r\n    });\r\n  }, []);\r\n\r\n  const [state, setState] = useState({\r\n    playing: false,\r\n    paused: false,\r\n    duration: 0,\r\n  });\r\n  const [timeDisplayFormat, setTimeDisplayformat] = useState(\"normal\");\r\n\r\n  const { playing } = state;\r\n  const { paused } = state;\r\n\r\n  //refs\r\n  const playerRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  //play pause toggle\r\n  const handlePlayPause = () => {\r\n    setState({ ...state, playing: !state.playing });\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    setState({ ...state, playing: true });\r\n  };\r\n\r\n  //format time\r\n  const format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n      return \"00:00\";\r\n    }\r\n\r\n    //set formatting\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n\r\n    if (hh) {\r\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n  };\r\n\r\n  //get the seconds played\r\n  const handleProgress = (changeState) => {\r\n    if (!state.seeking) {\r\n      setState({ ...state, ...changeState });\r\n      //format seconds\r\n      const time = format(changeState.playedSeconds);\r\n      setTimeDisplayformat(time);\r\n    }\r\n  };\r\n\r\n  const handleSeekChange = (e, newValue) => {\r\n    console.log({ newValue });\r\n    setState({ ...state, played: parseFloat(newValue / 100) });\r\n  };\r\n\r\n  //togle decription\r\n  const toggleDecription = () => {\r\n    if (showDescription) {\r\n      setShowDecription(false);\r\n    } else {\r\n      setShowDecription(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div>\r\n          <Button className=\"float-right\" id=\"Popover1\" type=\"button\">\r\n            Manage Ribbon\r\n          </Button>\r\n          <Popover\r\n            placement=\"bottom\"\r\n            isOpen={popoverOpen}\r\n            target=\"Popover1\"\r\n            toggle={toggle}\r\n          >\r\n            <PopoverHeader>Manage Ribbon</PopoverHeader>\r\n            <PopoverBody>\r\n              <Link to={`/ribbon/edit/${ribbon.id}`}>\r\n                <Button>Edit</Button>\r\n              </Link>\r\n              <Button>Delete</Button>\r\n            </PopoverBody>\r\n          </Popover>\r\n        </div>\r\n        <h1 className=\"text-center w-75 mx-auto\">{ribbon.title}</h1>\r\n        <div>\r\n          <div className=\"d-flex justify-content-center\">\r\n            <ReactPlayer\r\n              onSeek={handleSeekChange}\r\n              ref={playerRef}\r\n              onPause={paused}\r\n              playing={playing}\r\n              onProgress={handleProgress}\r\n              controls={true}\r\n              url={ribbon.url}\r\n            />\r\n          </div>\r\n          <div>\r\n            {\" \"}\r\n            <p\r\n              className={\r\n                showDescription\r\n                  ? \"mx-auto w-75 font-weight-bold\"\r\n                  : \"hide-decription\"\r\n              }\r\n            >\r\n              {ribbon.decription}\r\n            </p>{\" \"}\r\n            <a\r\n              className=\"mx-auto w-50 float-right\"\r\n              href=\"#\"\r\n              onClick={toggleDecription}\r\n            >\r\n              {showDescription ? \"Hide Decription\" : \"Show Decription\"}\r\n            </a>\r\n          </div>\r\n          <div className=\"text-muted mx-auto w-75\">\r\n            Ribbion Created:{\" \"}\r\n            <Moment format=\" MMM D, YYYY\" withTitle>\r\n              {ribbon.createdDateTime}\r\n            </Moment>\r\n            <p>{ribbon.category?.name}</p>\r\n          </div>\r\n          <div className=\"text-center m-3\">\r\n            <SnagAddButton\r\n              handlePlayPause={handlePlayPause}\r\n              playerRef={playerRef}\r\n            />\r\n          </div>\r\n          <SnagList\r\n            playerRef={playerRef}\r\n            handlePlay={handlePlay}\r\n            timeDisplayFormat={timeDisplayFormat}\r\n          />\r\n        </div>\r\n        <canvas ref={canvasRef} />\r\n        {console.log(ribbon)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\youtube\\YouTubeSearch.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\providers\\SnagProvider.js",[],"C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonList.js",["260"],"import React, { useContext, useEffect } from \"react\";\r\nimport { RibbonContext } from \"../../providers/RibbonProvider\";\r\n\r\nimport { RibbonCard } from \"./RibbonCard\";\r\n\r\nexport const RibbonList = () => {\r\n  const { getUserRibbons, ribbons } = useContext(RibbonContext);\r\n\r\n  useEffect(() => {\r\n    getUserRibbons();\r\n  }, []);\r\n\r\n  if (!ribbons) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Ribbons</h1>\r\n      {ribbons.length === 0 ? (\r\n        <p className=\"text-center\">None</p>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {ribbons.map((ribbon) => (\r\n            <RibbonCard key={ribbon.id} ribbon={ribbon} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonCard.js",["261","262"],"import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardImg,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nexport const RibbonCard = ({ ribbon }) => (\r\n  <div className=\"col-sm-12 col-md-6 col-lg-4\">\r\n    <Link to={`/ribbon/${ribbon.id}`}>\r\n      <Card style={{ height: \"500px\" }}>\r\n        {ribbon.thumbnail ? (\r\n          <CardImg\r\n            top\r\n            width=\"100%\"\r\n            height=\"60%\"\r\n            src=\"/assets/318x180.svg\"\r\n            alt=\"Card image cap\"\r\n            controls={false}\r\n            src={ribbon.thumbnail}\r\n          />\r\n        ) : (\r\n          <ReactPlayer\r\n            top\r\n            width=\"100%\"\r\n            height=\"60%\"\r\n            src=\"/assets/318x180.svg\"\r\n            alt=\"Card image cap\"\r\n            controls={false}\r\n            url={ribbon.url}\r\n          />\r\n        )}\r\n        <CardBody>\r\n          <CardTitle className=\"ribbon-card-title\" tag=\"h5\">\r\n            {ribbon.title}\r\n          </CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n            <Moment fromNow>{ribbon.dateCreated}</Moment>\r\n          </CardSubtitle>\r\n          <CardText className=\"ribbon-card-decription\">\r\n            {ribbon.decription}\r\n          </CardText>\r\n          {ribbon.snags.length === 0 ? (\r\n            \"No Ribbon Snags\"\r\n          ) : (\r\n            <>\r\n              <CardText>Ribbon Snags</CardText>\r\n              {ribbon.snags[0] ? (\r\n                <CardText>\r\n                  {ribbon.snags[0].note}{\" \"}\r\n                  <Moment fromNow>{ribbon.snags[0].dateCreated}</Moment>{\" \"}\r\n                </CardText>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {ribbon.snags[1] ? (\r\n                <CardText>\r\n                  {ribbon.snags[1].note}{\" \"}\r\n                  <Moment fromNow>{ribbon.snags[1].dateCreated}</Moment>{\" \"}\r\n                </CardText>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </>\r\n          )}\r\n        </CardBody>\r\n      </Card>\r\n    </Link>\r\n  </div>\r\n);\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\snag\\SnagList.js",["263","264"],"import React, { useContext, useEffect } from \"react\";\r\nimport { SnagContext } from \"../../providers/SnagProvider\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nexport const SnagList = ({ playerRef, handlePlay }) => {\r\n  const { getByRibbonById, snags } = useContext(SnagContext);\r\n  const { ribbonId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getByRibbonById(ribbonId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row p-5\">\r\n      <div className=\"col align-self-center\">\r\n        <div class=\"list-group\">\r\n          <div class=\"list-group-item list-group-item-action active\">\r\n            Ribbon Snags\r\n          </div>\r\n          {snags.map((snag) => (\r\n            <>\r\n              <div class=\"list-group-item list-group-item-actions\">\r\n                <Button\r\n                  className=\"btn btn-link\"\r\n                  onClick={() => {\r\n                    //go to seconds stamp of video\r\n                    playerRef.current.seekTo(snag.time);\r\n                    //play video\r\n                    handlePlay();\r\n                  }}\r\n                >\r\n                  {snag.display}\r\n                </Button>\r\n                Snag Note\r\n              </div>\r\n            </>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\snag\\SnagAddButton.js",["265","266"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nexport const SnagAddButton = ({\r\n  playerRef,\r\n  timeDisplayFormat,\r\n  handlePlayPause,\r\n}) => {\r\n  //format time\r\n  const format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n      return \"00:00\";\r\n    }\r\n\r\n    //set formatting\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n\r\n    if (hh) {\r\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n  };\r\n\r\n  //add info for snag\r\n  const addSnag = () => {\r\n    console.log({\r\n      time: playerRef.current.getCurrentTime(),\r\n      display: format(playerRef.current.getCurrentTime()),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      className=\"btn btn-lg btn-secondary w-50\"\r\n      onClick={() => {\r\n        handlePlayPause();\r\n        addSnag();\r\n      }}\r\n    >\r\n      Add Snag {timeDisplayFormat}\r\n    </Button>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonForm.js",["267","268","269"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Progress,\r\n} from \"reactstrap\";\r\nimport { CategoryContext } from \"../../providers/CategoryProvider\";\r\nimport { SourceContext } from \"../../providers/SourceProvider\";\r\nimport { RibbonContext } from \"../../providers/RibbonProvider\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Ribbon.css\";\r\nimport { storage } from \"../../firebase\";\r\n\r\nexport const RibbonForm = (props) => {\r\n  const { getCategories, categories } = useContext(CategoryContext);\r\n  const { getSources, sources } = useContext(SourceContext);\r\n  const { getRibbonById, addRibbon, updateRibbon } = useContext(RibbonContext);\r\n  const [isMakedPublic, setIsPublic] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [disablePublic, setDisablePublic] = useState(true);\r\n  const [ribbon, setRibbon] = useState({});\r\n  const [isUrl, setIsUrl] = useState(true);\r\n  const [file, setFile] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  //TODO set loading for file to wait on url\r\n  const [fileLoading, setFileLoading] = useState(false);\r\n\r\n  const { ribbonId } = useParams();\r\n\r\n  const defaultCategory = JSON.parse(localStorage.getItem(\"userProfile\"))\r\n    .uncategorizedId;\r\n\r\n  //image upload\r\n  const handleUploadChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n      setFileLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    const uploadTask = storage.ref(`videos/${file.name}`).put(file);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        setProgress(progress);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        setFileLoading(false);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"videos\")\r\n          .child(file.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n            setFileLoading(false);\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  //toggle public and private\r\n  const handlePrivacy = () => {\r\n    !isMakedPublic ? setIsPublic(true) : setIsPublic(false);\r\n  };\r\n\r\n  //return thubnail based on youtube Id\r\n  const getYoubeVideoId = (url) => {\r\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\r\n    var match = url.match(regExp);\r\n    console.log(match && match[7].length == 11 ? match[7] : null);\r\n    return match && match[7].length == 11\r\n      ? `http://img.youtube.com/vi/${match[7]}/hqdefault.jpg`\r\n      : null;\r\n  };\r\n\r\n  //based on souce set input fields and public field\r\n  const getChoosenSource = (event) => {\r\n    const source = parseInt(event.target.value);\r\n    if (source === 3) {\r\n      setIsUrl(false);\r\n      setRibbon({ ...ribbon, sourceId: 3, url: \"\" });\r\n    } else {\r\n      setIsUrl(true);\r\n      setUrl(\"\");\r\n    }\r\n\r\n    if (source === 2) {\r\n      setDisablePublic(false);\r\n      setIsUrl(true);\r\n    } else {\r\n      setIsPublic(false);\r\n      setDisablePublic(true);\r\n    }\r\n  };\r\n\r\n  // Get categories and sources. If ribbonId is in the URL, getRibbonById\r\n  useEffect(() => {\r\n    getSources();\r\n    getCategories();\r\n    if (ribbonId) {\r\n      getRibbonById(ribbonId).then((ribbon) => {\r\n        setRibbon(ribbon);\r\n        setIsLoading(false);\r\n      });\r\n    } else {\r\n      setIsLoading(false);\r\n      //clear flieds\r\n      setRibbon({\r\n        title: \"\",\r\n        decription: \"\",\r\n        sourceId: 0,\r\n        url: \"\",\r\n        thumbnail: \"\",\r\n        isActive: true,\r\n        isPublic: false,\r\n      });\r\n    }\r\n  }, [ribbonId]);\r\n\r\n  //when field changes, update state. This causes a re-render and updates the view.\r\n  //Controlled component\r\n  const handleControlledInputChange = (event) => {\r\n    const newRibbon = { ...ribbon };\r\n    newRibbon[event.target.name] = event.target.value;\r\n    setRibbon(newRibbon);\r\n  };\r\n\r\n  const handleSaveRibbon = (e) => {\r\n    e.preventDefault();\r\n    if (file != null) {\r\n      handleUpload();\r\n    }\r\n\r\n    if (!fileLoading) {\r\n      //disable the button - no extra clicks\r\n      setIsLoading(true);\r\n      if (ribbonId) {\r\n        //PUT - update\r\n        updateRibbon({\r\n          id: ribbon.id,\r\n          title: ribbon.title,\r\n          decription: ribbon.decription,\r\n          sourceId: parseInt(ribbon.sourceId),\r\n          url: url || ribbon.url,\r\n          thumbnail:\r\n            parseInt(ribbon.sourceId) === 2\r\n              ? getYoubeVideoId(ribbon.url)\r\n              : null,\r\n          categoryId: ribbon.categoryId ? ribbon.categoryId : defaultCategory,\r\n          isActive: true,\r\n          isPublic: parseInt(ribbon.sourceId) === 2 ? isMakedPublic : false,\r\n          dateCreated: ribbon.dateCreated,\r\n        });\r\n      } else {\r\n        //POST - add\r\n        addRibbon({\r\n          title: ribbon.title,\r\n          decription: ribbon.decription,\r\n          sourceId: parseInt(ribbon.sourceId),\r\n          url: url || ribbon.url,\r\n          thumbnail:\r\n            parseInt(ribbon.sourceId) === 2\r\n              ? getYoubeVideoId(ribbon.url)\r\n              : null,\r\n          categoryId: ribbon.categoryId ? ribbon.categoryId : defaultCategory,\r\n          isActive: true,\r\n          isPublic: parseInt(ribbon.sourceId) === 2 ? isMakedPublic : false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"w-75 mx-auto p-4\">\r\n        <Form className=\"border p-5\" onSubmit={handleSaveRibbon}>\r\n          <h2 className=\"text-center\">New Ribbon</h2>\r\n          <FormGroup row>\r\n            <Label htmlFor=\"title\" lg={2}>\r\n              Title <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Col lg={10}>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                defaultValue={ribbon.title}\r\n                onChange={handleControlledInputChange}\r\n                required=\"required\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <Row form>\r\n            <Col md={6}>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"category\" lg={2}>\r\n                  Category\r\n                </Label>\r\n                <Col lg={10}>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"categoryId\"\r\n                    value={ribbon.categoryId}\r\n                    onChange={handleControlledInputChange}\r\n                    required=\"required\"\r\n                  >\r\n                    <option value=\"0\"></option>\r\n                    {categories.map((c) => (\r\n                      <option key={c.id} value={c.id}>\r\n                        {c.name}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"source\" lg={2}>\r\n                  Source <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Col lg={10}>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"sourceId\"\r\n                    value={ribbon.sourceId}\r\n                    onChange={(e) => {\r\n                      handleControlledInputChange(e);\r\n                      getChoosenSource(e);\r\n                    }}\r\n                    required=\"required\"\r\n                  >\r\n                    <option value=\"0\"></option>\r\n                    {sources.map((s) => (\r\n                      <option key={s.id} value={s.id}>\r\n                        {s.type}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          {isUrl ? (\r\n            <FormGroup row>\r\n              <Label htmlFor=\"url\" lg={2}>\r\n                URL <span className=\"text-danger\">*</span>\r\n              </Label>\r\n              <Col gl={10}>\r\n                <Input\r\n                  type=\"url\"\r\n                  name=\"url\"\r\n                  defaultValue={ribbon.url}\r\n                  onChange={handleControlledInputChange}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n          ) : (\r\n            <>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"url\" lg={2}>\r\n                  Upload File <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Col gl={10}>\r\n                  <Input\r\n                    type=\"file\"\r\n                    name=\"url\"\r\n                    accept=\".mp4,.webm,.ogg\"\r\n                    defaultValue={ribbon.url}\r\n                    onChange={handleUploadChange}\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n              <Progress color=\"primary\" value={progress}>\r\n                {progress}%\r\n              </Progress>\r\n            </>\r\n          )}\r\n\r\n          <FormGroup row>\r\n            <Label htmlFor=\"decription\" lg={2}>\r\n              Decription <span className=\"text-danger\">*</span>\r\n            </Label>\r\n            <Col lg={10}>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"decription\"\r\n                defaultValue={ribbon.decription}\r\n                onChange={handleControlledInputChange}\r\n                required=\"required\"\r\n              />\r\n            </Col>\r\n          </FormGroup>\r\n          <Label>Public</Label>\r\n\r\n          <div>\r\n            <input\r\n              type=\"checkbox\"\r\n              hidden=\"hidden\"\r\n              id=\"username\"\r\n              disabled={disablePublic}\r\n              defaultChecked={ribbon.isPublic}\r\n              checked={isMakedPublic}\r\n              onChange={handlePrivacy}\r\n            />\r\n            <label className=\"switch\" htmlFor=\"username\"></label>\r\n          </div>\r\n          <small className=\"text-muted\">\r\n            Only YouTube videos can be public\r\n          </small>\r\n          <Button className=\"btn btn-success float-right\" disabled={isLoading}>\r\n            Submit\r\n          </Button>\r\n          <div>\r\n            <small className=\"text-warning\">\r\n              {!isUrl ? \"Ribbon added when video loads\" : \"\"}\r\n            </small>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonTrashList.js",["270"],"import React, { useContext, useEffect } from \"react\";\r\nimport { RibbonContext } from \"../../providers/RibbonProvider\";\r\n\r\nimport { RibbonCard } from \"./RibbonCard\";\r\n\r\nexport const RibbonTrashList = () => {\r\n  const { getUserTrashRibbons, ribbons } = useContext(RibbonContext);\r\n\r\n  useEffect(() => {\r\n    getUserTrashRibbons();\r\n  }, []);\r\n\r\n  if (!ribbons) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Ribbons</h1>\r\n      {ribbons.length === 0 ? (\r\n        <p className=\"text-center\">Trash Empty</p>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {ribbons.map((ribbon) => (\r\n            <RibbonCard key={ribbon.id} ribbon={ribbon} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonListByCategory.js",["271"],"import React, { useContext, useEffect } from \"react\";\r\nimport { RibbonContext } from \"../../providers/RibbonProvider\";\r\nimport { RibbonCard } from \"./RibbonCard\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const RibbonListByCategory = () => {\r\n  const { getRibbonByCategory, ribbons } = useContext(RibbonContext);\r\n  const { categoryId } = useParams();\r\n\r\n  useEffect(() => {\r\n    getRibbonByCategory(categoryId);\r\n  }, [categoryId]);\r\n\r\n  if (!ribbons) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Ribbons</h1>\r\n      {ribbons.length === 0 ? (\r\n        <p className=\"text-center\">None</p>\r\n      ) : (\r\n        <div className=\"row\">\r\n          {ribbons.map((ribbon) => (\r\n            <RibbonCard key={ribbon.id} ribbon={ribbon} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonTrashMove.js",["272","273"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { RibbonContext } from \"../../providers/RibbonProvider\";\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const RibbonTrashMove = ({ ribbon }) => {\r\n  const { updateRibbon } = useContext(RibbonContext);\r\n  const [pendingTrash, setPendingTrash] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleTrash = () => {\r\n    updateRibbon({\r\n      id: ribbon.id,\r\n      title: ribbon.title,\r\n      decription: ribbon.decription,\r\n      sourceId: ribbon.sourceId,\r\n      url: ribbon.url,\r\n      thumbnail: ribbon.thumbnail,\r\n      categoryId: ribbon.categoryId,\r\n      isActive: false,\r\n      isPublic: ribbon.isPublic,\r\n      dateCreated: ribbon.dateCreated,\r\n    });\r\n    setPendingTrash(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn btn-sm btn-danger\"\r\n        onClick={(e) => setPendingTrash(true)}\r\n      >\r\n        Delete\r\n      </Button>\r\n      <Modal isOpen={pendingTrash}>\r\n        <ModalHeader>Delete {ribbon.title}?</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this ribbon?</ModalBody>\r\n        <ModalFooter>\r\n          <Button onClick={(e) => setPendingTrash(false)}>No, Cancel</Button>\r\n          <Button className=\"btn btn-outline-danger\" onClick={handleTrash}>\r\n            Yes, Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\category\\CategoryNavList.js",["274"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { CategoryContext } from \"../../providers/CategoryProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nexport const CategoryNavList = () => {\r\n  const { categories, getCategories } = useContext(CategoryContext);\r\n  const defaultCategory = JSON.parse(localStorage.getItem(\"userProfile\"))\r\n    .uncategorizedId;\r\n\r\n  //get all user categories\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  if (!categories) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dropdown\r\n        li\r\n        color=\"link\"\r\n        className=\"navbar__item nav__addcategorylink\"\r\n        isOpen={dropdownOpen}\r\n        toggle={toggle}\r\n      >\r\n        <DropdownToggle caret>Categories</DropdownToggle>\r\n        <DropdownMenu>\r\n          <Link className=\"navbar__link\" to=\"/categories\">\r\n            Manager Categories\r\n          </Link>\r\n          <DropdownItem divider />\r\n          {categories.map((c) => (\r\n            <DropdownItem key={c.id}>\r\n              {\" \"}\r\n              <Link to={`/ribbon/category/${c.id}`}>{c.name}</Link>\r\n            </DropdownItem>\r\n          ))}\r\n          <DropdownItem>\r\n            <Link to={`/ribbon/category/${defaultCategory}`}>\r\n              uncategorizedId\r\n            </Link>\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonDelete.js",["275","276"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { RibbonContext } from \"../../providers/RibbonProvider\";\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\n\r\nexport const RibbonDelete = ({ ribbon }) => {\r\n  const { deleteRibbon, getUserTrashRibbons } = useContext(RibbonContext);\r\n  const [pendingDelete, setPendingDelete] = useState(false);\r\n\r\n  const handleDelete = () => {\r\n    deleteRibbon(ribbon.id); //.then(getUserTrashRibbons);\r\n    setPendingDelete(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn btn-sm btn-danger\"\r\n        onClick={(e) => setPendingDelete(true)}\r\n      >\r\n        Delete\r\n      </Button>\r\n      <Modal isOpen={pendingDelete}>\r\n        <ModalHeader>Permanently Delete {ribbon.title}?</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this ribbon?</ModalBody>\r\n        <ModalFooter>\r\n          <Button onClick={(e) => setPendingDelete(false)}>No, Cancel</Button>\r\n          <Button className=\"btn btn-outline-danger\" onClick={handleDelete}>\r\n            Yes, Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\components\\ribbon\\RibbonRestore.js",["277","278"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { RibbonContext } from \"../../providers/RibbonProvider\";\r\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const RibbonRestore = ({ ribbon }) => {\r\n  const { updateRibbon } = useContext(RibbonContext);\r\n  const [pendingRestore, setPendingRestore] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleRestore = () => {\r\n    updateRibbon({\r\n      id: ribbon.id,\r\n      title: ribbon.title,\r\n      decription: ribbon.decription,\r\n      sourceId: ribbon.sourceId,\r\n      url: ribbon.url,\r\n      thumbnail: ribbon.thumbnail,\r\n      categoryId: ribbon.categoryId,\r\n      isActive: true,\r\n      isPublic: ribbon.isPublic,\r\n      dateCreated: ribbon.dateCreated,\r\n    });\r\n    //.then(() => history.push(\"/ribbons/trash\"));\r\n    setPendingRestore(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className=\"btn btn-sm btn-info\"\r\n        onClick={(e) => setPendingRestore(true)}\r\n      >\r\n        Restore\r\n      </Button>\r\n      <Modal isOpen={pendingRestore}>\r\n        <ModalHeader>Restore {ribbon.title}?</ModalHeader>\r\n        <ModalBody>Are you sure you want to restore this ribbon?</ModalBody>\r\n        <ModalFooter>\r\n          <Button onClick={(e) => setPendingRestore(false)}>No, Cancel</Button>\r\n          <Button className=\"btn btn-outline-info\" onClick={handleRestore}>\r\n            Yes, Restore\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\CJ\\workspace\\csharp\\Ribboned-Capstone\\Ribboned\\clientside\\src\\firebase\\index.js",[],{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","severity":1,"message":"284","line":2,"column":10,"nodeType":"285","messageId":"286","endLine":2,"endColumn":18},{"ruleId":"279","replacedBy":"287"},{"ruleId":"281","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":11,"column":6,"nodeType":"291","endLine":11,"endColumn":8,"suggestions":"292"},{"ruleId":"289","severity":1,"message":"290","line":11,"column":6,"nodeType":"291","endLine":11,"endColumn":21,"suggestions":"293"},{"ruleId":"283","severity":1,"message":"294","line":1,"column":29,"nodeType":"285","messageId":"286","endLine":1,"endColumn":38},{"ruleId":"283","severity":1,"message":"295","line":11,"column":5,"nodeType":"285","messageId":"286","endLine":11,"endColumn":18},{"ruleId":"283","severity":1,"message":"296","line":14,"column":19,"nodeType":"285","messageId":"286","endLine":14,"endColumn":29},{"ruleId":"279","replacedBy":"297"},{"ruleId":"281","replacedBy":"298"},{"ruleId":"299","severity":1,"message":"300","line":40,"column":11,"nodeType":"301","endLine":40,"endColumn":23},{"ruleId":"283","severity":1,"message":"284","line":2,"column":10,"nodeType":"285","messageId":"286","endLine":2,"endColumn":18},{"ruleId":"283","severity":1,"message":"296","line":10,"column":19,"nodeType":"285","messageId":"286","endLine":10,"endColumn":29},{"ruleId":"289","severity":1,"message":"290","line":11,"column":6,"nodeType":"291","endLine":11,"endColumn":8,"suggestions":"302"},{"ruleId":"289","severity":1,"message":"290","line":11,"column":6,"nodeType":"291","endLine":11,"endColumn":21,"suggestions":"303"},{"ruleId":"289","severity":1,"message":"304","line":29,"column":6,"nodeType":"291","endLine":29,"endColumn":8,"suggestions":"305"},{"ruleId":"299","severity":1,"message":"300","line":149,"column":13,"nodeType":"301","endLine":153,"endColumn":14},{"ruleId":"289","severity":1,"message":"306","line":11,"column":6,"nodeType":"291","endLine":11,"endColumn":8,"suggestions":"307"},{"ruleId":"283","severity":1,"message":"308","line":13,"column":3,"nodeType":"285","messageId":"286","endLine":13,"endColumn":9},{"ruleId":"309","severity":1,"message":"310","line":28,"column":13,"nodeType":"311","endLine":28,"endColumn":35},{"ruleId":"283","severity":1,"message":"312","line":5,"column":8,"nodeType":"285","messageId":"286","endLine":5,"endColumn":19},{"ruleId":"289","severity":1,"message":"313","line":13,"column":6,"nodeType":"291","endLine":13,"endColumn":8,"suggestions":"314"},{"ruleId":"283","severity":1,"message":"315","line":1,"column":17,"nodeType":"285","messageId":"286","endLine":1,"endColumn":27},{"ruleId":"283","severity":1,"message":"294","line":1,"column":29,"nodeType":"285","messageId":"286","endLine":1,"endColumn":38},{"ruleId":"316","severity":1,"message":"317","line":84,"column":42,"nodeType":"318","messageId":"319","endLine":84,"endColumn":44},{"ruleId":"316","severity":1,"message":"317","line":85,"column":37,"nodeType":"318","messageId":"319","endLine":85,"endColumn":39},{"ruleId":"289","severity":1,"message":"320","line":132,"column":6,"nodeType":"291","endLine":132,"endColumn":16,"suggestions":"321"},{"ruleId":"289","severity":1,"message":"322","line":11,"column":6,"nodeType":"291","endLine":11,"endColumn":8,"suggestions":"323"},{"ruleId":"289","severity":1,"message":"324","line":12,"column":6,"nodeType":"291","endLine":12,"endColumn":18,"suggestions":"325"},{"ruleId":"283","severity":1,"message":"294","line":1,"column":39,"nodeType":"285","messageId":"286","endLine":1,"endColumn":48},{"ruleId":"283","severity":1,"message":"326","line":9,"column":9,"nodeType":"285","messageId":"286","endLine":9,"endColumn":16},{"ruleId":"289","severity":1,"message":"290","line":19,"column":6,"nodeType":"291","endLine":19,"endColumn":8,"suggestions":"327"},{"ruleId":"283","severity":1,"message":"294","line":1,"column":39,"nodeType":"285","messageId":"286","endLine":1,"endColumn":48},{"ruleId":"283","severity":1,"message":"328","line":6,"column":25,"nodeType":"285","messageId":"286","endLine":6,"endColumn":44},{"ruleId":"283","severity":1,"message":"294","line":1,"column":39,"nodeType":"285","messageId":"286","endLine":1,"endColumn":48},{"ruleId":"283","severity":1,"message":"326","line":9,"column":9,"nodeType":"285","messageId":"286","endLine":9,"endColumn":16},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["329"],["330"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["331"],["332"],"'useEffect' is defined but never used.","'getCategories' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["329"],["330"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["333"],["334"],"React Hook useEffect has missing dependencies: 'getRibbonById' and 'ribbonId'. Either include them or remove the dependency array.",["335"],"React Hook useEffect has a missing dependency: 'getUserRibbons'. Either include it or remove the dependency array.",["336"],"'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ReactPlayer' is defined but never used.","React Hook useEffect has missing dependencies: 'getByRibbonById' and 'ribbonId'. Either include them or remove the dependency array.",["337"],"'useContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getCategories', 'getRibbonById', and 'getSources'. Either include them or remove the dependency array.",["338"],"React Hook useEffect has a missing dependency: 'getUserTrashRibbons'. Either include it or remove the dependency array.",["339"],"React Hook useEffect has a missing dependency: 'getRibbonByCategory'. Either include it or remove the dependency array.",["340"],"'history' is assigned a value but never used.",["341"],"'getUserTrashRibbons' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"342","fix":"346"},{"desc":"344","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"342","fix":"360"},"Update the dependencies array to be: [getCategories]",{"range":"361","text":"362"},"Update the dependencies array to be: [getCategories, pendingDelete]",{"range":"363","text":"364"},{"range":"365","text":"362"},{"range":"366","text":"364"},"Update the dependencies array to be: [getRibbonById, ribbonId]",{"range":"367","text":"368"},"Update the dependencies array to be: [getUserRibbons]",{"range":"369","text":"370"},"Update the dependencies array to be: [getByRibbonById, ribbonId]",{"range":"371","text":"372"},"Update the dependencies array to be: [getCategories, getRibbonById, getSources, ribbonId]",{"range":"373","text":"374"},"Update the dependencies array to be: [getUserTrashRibbons]",{"range":"375","text":"376"},"Update the dependencies array to be: [categoryId, getRibbonByCategory]",{"range":"377","text":"378"},{"range":"379","text":"362"},[364,366],"[getCategories]",[455,470],"[getCategories, pendingDelete]",[364,366],[455,470],[1155,1157],"[getRibbonById, ribbonId]",[320,322],"[getUserRibbons]",[462,464],"[getByRibbonById, ribbonId]",[3781,3791],"[getCategories, getRibbonById, getSources, ribbonId]",[335,337],"[getUserTrashRibbons]",[434,446],"[categoryId, getRibbonByCategory]",[563,565]]